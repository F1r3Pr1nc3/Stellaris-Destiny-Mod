# Destiny - The Traveler 
# Originally Coded by Algae
# Updated to recent versions by Not_AI

namespace = dest_traveler

#####################################################
#EVENTS KEY
#999x = debugging events
#1 - 99 = traveler spawn and contact events
#100 - 199 = traveler diplomatic menu
#200 - 299 = traveler diplomacy events
#100x = traveler pathfinding
#####################################################

### DEBUG EVENT VALUES
@traveler_enter_galaxy_time_base = 1
@traveler_enter_galaxy_time_random = 0
@traveler_enter_system_time_base = 1
@traveler_enter_system_time_random = 0

### RELEASE EVENT VALUES
#@traveler_enter_galaxy_time_base = 22500
#@traveler_enter_galaxy_time_random = 4500
#@traveler_enter_system_time_base = 360
#@traveler_enter_system_time_random = 180
#@traveler_arrival_time = 360
@golden_age_length = 3600
@terraforming_time = 360

# Game_start
### TODO
# Revamp the spawn events to function off of a single call from the global event country - Done

### Traveler Enter Galaxy Events
# Global silent event to begin countdown to Traveler Arrival
event = {
	id = dest_traveler.0
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	
	immediate = {
		random_rim_system = {
		#random_system = {
			set_star_flag = dest_traveler_arrival_system
			clear_global_event_target = dest_traveler_current_system
			save_global_event_target_as = dest_traveler_current_system
		}
		event_target:global_event_country = {
			country_event = {
				id = dest_traveler.1
				days = @traveler_enter_galaxy_time_base
				random = @traveler_enter_galaxy_time_random
			}
		}
	}
}
# Hidden event to notify every empire that the Traveler is close to entering the Galaxy
country_event = {
	id = dest_traveler.1
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_global_flag = dest_traveler_in_galaxy
		}
	}

	immediate = {
		set_global_flag = dest_traveler_approaching
		every_playable_country = {
			country_event = {
				id = dest_traveler.2
			}
		}		
		country_event = {
			id = dest_traveler.3
			days = @traveler_enter_system_time_base
			random = @traveler_enter_system_time_random
		}
	}
}
# Visible event taking place in the Global Event Country and displays the Traveler is near notification
country_event = {
	id = dest_traveler.2
	is_triggered_only = yes
	title = traveler.2.name
	desc = traveler.2.desc
	picture = "GFX_evt_physics_research"
	show_sound = event_alien_signal
	option = {
		name = traveler.2.a
	}
}
# Hidden event to handle the spawning of the Traveler into the game
country_event = {
	id = dest_traveler.3
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	trigger = {
		NOT = {
			has_global_flag = dest_traveler_in_galaxy
		}
	}	
	immediate = {
		set_global_flag = dest_traveler_in_galaxy
		create_species = {
			name = "Ghost"
			plural = "Ghosts"
			adjective = "Ghost"
			class = ROBOT
			portrait = random
			immortal = yes
			effect = {
				save_global_event_target_as = dest_ghost_species
			}
		}
		random_rim_system = {
		#random_system = {
			limit = { has_star_flag = dest_traveler_arrival_system }
			if = {
				limit = {
					exists = space_owner
				}
				#Phase this out?
				space_owner = {
					clear_global_event_target = dest_traveler_current_system_owner
					save_global_event_target_as = dest_traveler_current_system_owner
				}
			}
			random_system_planet = {
				set_planet_flag = dest_no_terraform
				create_country = {
					name = "Traveler"
					type = dest_traveler_country
					species = event_target:dest_ghost_species
					name_list = AVI1
					flag = {
						icon = {
							category = "pirate"
							file = "flag_pirate_7.dds"
						}
						background = {
							category = "backgrounds"
							file = "00_solid.dds"
						}
						colors ={
							"grey"
							"grey"
							"null"
							"null"
						}
					}
					effect = {
						create_leader = {
							class = ruler
							species = event_target:dest_ghost_species
							name = random
							skill = 10
						}
						create_fleet = {
							name = "Traveler"
							settings = {
								is_boss = yes
							}
							effect = {
								set_owner = PREV
								create_ship = {
									name = "Traveler"
									design = "Traveler"
									graphical_culture = "techno"
								}
								set_location = PREVPREV
								set_fleet_flag = dest_traveler_ship
								set_fleet_stance = passive
								fleet_event = { id = dest_traveler.1001 }
								fleet_event = { id = dest_traveler.1007 }
								save_global_event_target_as = traveler_fleet
							}
						}
						save_global_event_target_as = dest_traveler_country
						set_country_flag = traveler_country_flag
					}
				}
			}
			if = {
				limit = {
					exists = space_owner
				}
				space_owner = {
					country_event = { id = dest_traveler.6 }
				}
				every_playable_country = {
					limit = {
						NOT = {
							is_same_value = space_owner
						}
					}
					country_event = { id = dest_traveler.7 }
				}
				else = {
					every_playable_country = {
						country_event = { id = dest_traveler.7 }
					}
				}
			}
			set_global_flag = dest_traveler_exists
			every_playable_country = {
				begin_event_chain = {
					event_chain = traveler_chain
					target = this
				}
			}
		}
	}
}
# Traveler spawn event for system owner
country_event = {
	id = dest_traveler.6
	title = traveler.6.name
	desc = "traveler.6.desc"
	picture = "GFX_traveler"
	location = event_target:traveler_fleet
	is_triggered_only = yes
	fire_only_once = yes
	
	trigger = {
		NOT = {
			has_country_flag = dest_met_traveler
		}
		if = {
			limit = { 
				exists = event_target:dest_traveler_current_system_owner
			}
			event_target:dest_traveler_current_system_owner = {
				is_same_empire = ROOT
			}
		}
	}	
	immediate = {
		set_country_flag = dest_met_traveler
		establish_communications_no_message = event_target:dest_traveler_country
	}
	option = {
		name = traveler.6.a
	}
}

# Traveler spawn event for non-system owners
country_event = {
	id = dest_traveler.7
	title = traveler.7.name
	desc = {
		trigger = {
			any_country = {
				event_target:traveler_fleet = {
					is_inside_border = PREV
				}
			}
		}
		text = traveler.7.desc.owned
	}
	desc = {
		trigger = {
			NOT = {
				any_country = {
					event_target:traveler_fleet = {
						is_inside_border = PREV
					}
				}
			}
		}
		text = traveler.7.desc.unowned
	}
	picture = "GFX_evt_smugglers_in_bar"
	location = event_target:traveler_fleet
	
	hide_window = no
	is_triggered_only = yes
	fire_only_once = yes
	
	trigger = {
		NOT = {
			has_country_flag = dest_met_traveler
		}
	}
	
	option = {
		name = traveler.7.a
	}
}

#traveler enters empire
country_event = {
	id = dest_traveler.8
	title = "traveler.8.name"
	desc = "traveler.8.desc"
	picture = "GFX_traveler"
	location = event_target:traveler_fleet
	
	is_triggered_only = yes
	#fire_only_once = yes
	
	trigger = {
		has_global_flag = dest_traveler_exists
		NOT = { has_country_flag = dest_met_traveler }
	}
	
	immediate = {
		set_country_flag = dest_met_traveler
		establish_communications_no_message = event_target:dest_traveler_country
	}
	
	option = {
		name = traveler.8.a
		hidden_effect = {
			#country_event = { id = dest_traveler.9 days = 1 }
		}
	}
}

ship_event = {
	id = dest_traveler.9
	title = "traveler.9.name"
	desc = "traveler.9.desc"
	picture = "GFX_traveler"
	location = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		solar_system = {
			any_ship_in_system = {
				fleet = {
					has_fleet_flag = dest_traveler_ship
				}
			}
		}
		owner = {
			NOT = {
				is_country_type = dest_traveler_country
				has_country_flag = dest_met_traveler
			}
		}
	}
	
	immediate = {
		owner = {
			establish_communications_no_message = event_target:dest_traveler_country
			set_country_flag = dest_met_traveler
		}
	}
	
	option = {
		name = traveler.9.a
	}
}

#find planet in system, terraform
fleet_event = {
	id = dest_traveler.1001
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_fleet_flag = dest_traveler_ship
		solar_system = {
			NOT = {
				has_star_flag = visited
				any_planet = {
					is_capital = yes
				}
			}
		}
	}
	
	immediate = {
		solar_system = { set_star_flag = visited }
		queue_actions = {
			wait = {
				duration = 3
				random = 1
			}
			find_closest_planet = {
				trigger = {
					id = "dest_traveler.1001.trigger.1"
					dest_is_traveler_terraformable_trigger = yes
				}
				found_planet = {
					orbit_planet = THIS
				}
				failed = {
					effect = {
						id = dest_traveler.1001.effect.1
						fleet_event = { id = dest_traveler.1003 }
						fleet_event = { id = dest_traveler.1005 }
					}
				}
			}
		}
	}
}

#on enter system, check if system has dest_traveler_destination flag, remove, clear queue, call find planet event
fleet_event = {
	id = dest_traveler.1002
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_fleet_flag = dest_traveler_ship
		solar_system = {
			NOT = {
				any_planet = {
					is_capital = yes
				}
			}
		}
	}

	immediate = {
		solar_system = {
			IF = {
				limit = { has_star_flag = dest_traveler_destination }
				remove_star_flag = dest_traveler_destination
			}
			clear_global_event_target = dest_traveler_current_system
			save_global_event_target_as = dest_traveler_current_system
			IF = {
				limit = {
					exists = space_owner
				}
				space_owner = {
					clear_global_event_target = dest_traveler_current_system_owner
					save_global_event_target_as = dest_traveler_current_system_owner
					country_event = { id = dest_traveler.8 }
				}
			}
		}
		clear_orders = yes
		IF = {
			limit = {
				solar_system = {
					has_star_flag = visited
				}
			}
			fleet_event = { id = dest_traveler.1003 }
			fleet_event = { id = dest_traveler.1005 }
			else = {
				fleet_event = { id = dest_traveler.1001 }
			}
		}
	}
}

#find system to jump to and jump, set system as "target"
fleet_event = {
	id = dest_traveler.1003
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_fleet_flag = dest_traveler_ship
		any_system = {
			has_star_flag = dest_traveler_destination
		}
	}
	
	immediate = {
		queue_actions = {
			wait = {
				duration = 3
				random = 1
			}
			find_random_system = {
				trigger = {
					id = dest_traveler.1003.trigger.1
					has_star_flag = dest_traveler_destination
				}
				found_system = {
					move_to = THIS
				}
			}
		}
	}
}

#on orbit, terraform planet
fleet_event = {
	id = dest_traveler.1004
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		orbit = {
			is_star = no
		}
		solar_system = {
			any_planet = {
				is_capital = no
			}
		}
		has_fleet_flag = dest_traveler_ship
	}
	
	immediate = {
		queue_actions = {
			wait = {
				duration = @terraforming_time
				random = 1
			}
			effect = {
				id = dest_traveler.1004.trigger.1
				orbit = {
					check_planet_size = yes
					IF = {
						limit = { solar_system = { exists = space_owner } }
						change_pc_ideal = yes
						else = {
							change_pc = rl_habitable_normal
							# random_list = {
								# 10 = { change_pc = pc_arid }
								# 10 = { change_pc = pc_desert }
								# 10 = { change_pc = pc_savannah }
								# 10 = { change_pc = pc_tropical }
								# 10 = { change_pc = pc_ocean }
								# 10 = { change_pc = pc_continental }
								# 10 = { change_pc = pc_tundra }
								# 10 = { change_pc = pc_arctic }
								# 10 = { change_pc = pc_alpine }
								# 5 = { change_pc = pc_gaia }
							# }
							# change_pc = pc_gaia
							add_modifier = {
								modifier = dest_traveler_terraformed
								days = -1
							}
						}
					}
					#generate_resources = yes
					reroll_deposits = yes
					IF = {
						limit = {
							exists = space_owner 
							space_owner = {
								NOT = { has_country_flag = trav_terra_proj }
							}
						}
						random_list = {
							15 = {
								#orbit = {
									planet_event = { id = dest_traveler.500 }
								#}
							}
						}
					}
				}
				fleet_event = { id = dest_traveler.1003 }
				fleet_event = { id = dest_traveler.1005 }
			}
		}
	}
}

#find new destination
fleet_event = {
	id = dest_traveler.1005
	
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_fleet_flag = dest_traveler_ship
		NOT = {
			any_system = {
				has_star_flag = dest_traveler_destination
			}
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				NOT = {
					has_star_flag = visited
				}
			}
			set_star_flag = dest_traveler_destination
		}
		fleet_event = { id = dest_traveler.1003 }
	}
}

#on enter system check if system is capital system or primitive system
fleet_event = {
	id = dest_traveler.1006
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_fleet_flag = dest_traveler_ship
		solar_system = {
			OR = {
				any_planet = {
					is_capital = yes
				}
				has_star_flag = primitive_system
			}
		}
	}
	
	immediate = {
		solar_system = {
			IF = {
				limit = {
					has_star_flag = dest_traveler_destination
				}
				remove_star_flag = dest_traveler_destination
			}
			clear_global_event_target = dest_traveler_current_system
			save_global_event_target_as = dest_traveler_current_system
			IF = {
				limit = {
					exists = space_owner
				}
				space_owner = {
					clear_global_event_target = dest_traveler_current_system_owner
					save_global_event_target_as = dest_traveler_current_system_owner
					country_event = { id = dest_traveler.8 }
				}
			}
		}
		clear_orders = yes
		fleet_event = { id = dest_traveler.1007 }
	}
}

#find star in capital system, move to orbit
fleet_event = {
	id = dest_traveler.1007
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_fleet_flag = dest_traveler_ship
		solar_system = {
			OR = {
				any_planet = {
					is_capital = yes
				}
				has_star_flag = primitive_system
			}
		}
	}
	
	immediate = {
		queue_actions = {
			wait = {
				duration = 3
				random = 1
			}
			find_closest_planet = {
				trigger = {
					id = dest_traveler.1007.trigger.1
					is_star = yes
				}
				found_planet = {
					orbit_planet = THIS
				}
			}
		}
	}
}

#on orbit of star in capital system, begin golden age events
fleet_event = {
	id = dest_traveler.1008
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_fleet_flag = dest_traveler_ship
		orbit = {
			is_star = yes
		}
		solar_system = {
			any_planet = {
				is_capital = yes
			}
			NOT = { has_star_flag = primitive_system }
		}
	}
	
	immediate = {
		solar_system = {
			space_owner = {
				country_event = { id = dest_traveler.15 }
				country_event = { id = dest_traveler.11 }
			}
		}
		every_country = {
			country_event = { id = dest_traveler.12 }
		}
		queue_actions = {
			wait = {
				duration = @golden_age_length
				random = 1
			}
			effect = {
				id = dest_traveler.1008.trigger.1
				fleet_event = { id = dest_traveler.1003 }
				fleet_event = { id = dest_traveler.1005 }
			}
		}
	}
}

#on orbit, uplift primitive
fleet_event = {
	id = dest_traveler.1009
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_fleet_flag = dest_traveler_ship
		solar_system = {
			has_star_flag = primitive_system
		}
		orbit = {
			is_star = yes
		}
	}
	
	immediate = {
		queue_actions = {
			wait = {
				duration = 360
				random = 1
			}
			effect = {
				id = dest_traveler.1009.trigger.1
				solar_system = {
					every_system_planet = {
						limit = { is_homeworld = yes }
						owner = {
							#uplift_primitives = yes
							add_modifier = {
								modifier = "dest_uplifted_by_traveler"
								days = 3600
							}
						}
					}
				}
				every_country = {
					country_event = { id = dest_traveler.13 }
				}
				fleet_event = { id = dest_traveler.1003 }
				fleet_event = { id = dest_traveler.1005 }
			}
		}
	}
}

#Attacked fixer
country_event = {
	id = dest_traveler.1010
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FROMFROM = {
			has_fleet_flag = dest_traveler_ship
		}
	}
	
	immediate = {
		#print_scope_effect = yes
		FROMFROM = {
			if = { #if attacked while terraforming, restart terraforming
				limit = {
					has_fleet_order = no
					NOT = {
						OR = {
							space_owner = {
								has_modifier = "dest_golden_age"
							}
							solar_system = {
								has_star_flag = primitive_system
							}
						}
					}
				}
				clear_fleet_actions = this
				fleet_event = { id = dest_traveler.1002 }
				fleet_event = { id = dest_traveler.1006 }
			}
			if = { #if attacked while giving golden age, leave
				limit = {
					solar_system = {
						space_owner = {
							has_modifier = "dest_golden_age"
						}
					}
				}
				clear_fleet_actions = this
				solar_system = {
					space_owner = {
						remove_modifier = "dest_golden_age"
					}
				}
				fleet_event = { id = dest_traveler.1003 }
				fleet_event = { id = dest_traveler.1005 }
			}
			if = { #if attacked while uplifting, restart uplifting
				limit = {
					solar_system = {
						has_star_flag = primitive_system
					}
				}
				clear_fleet_actions = this
				fleet_event = { id = dest_traveler.1007 }
			}
		}
	}
}

#begin golden age event chain
country_event = {
	id = dest_traveler.11
	title = "traveler.11.name"
	desc = "traveler.11.desc"
	picture = "GFX_traveler"
	
	is_triggered_only = yes
	#fire_only_once = yes
	
	trigger = {
		NOT = {
			has_country_flag = had_golden_age
		}
	}
	
	immediate = {
		set_country_flag = had_golden_age
	}
	 
	option = {
		name = traveler.11.a
		trigger = {
			NOT = {
				OR = {
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
				}
			}
		}
		add_modifier = {
			modifier = "dest_golden_age"
			days = @golden_age_length
		}
	}
	
	option = {
		name = traveler.11.b
		trigger = {
			OR = {
				has_ethic = ethic_spiritualist
				has_ethic = ethic_fanatic_spiritualist
			}
		}
		add_modifier = {
			modifier = "dest_golden_age"
			days = @golden_age_length
		}
	}
}

#announce Golden Age to other empires
country_event = {
	id = dest_traveler.12
	title = "traveler.12.name"
	desc = "traveler.12.desc"
	picture = "GFX_evt_metropolis"
	location = event_target:traveler_fleet
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			is_same_empire = event_target:dest_traveler_current_system_owner
		}
	}
	
	immediate = {
	
	}
	
	option = {
		name = traveler.12.a
	}
}

#announce traveler uplifting primitives
country_event = {
	id = dest_traveler.13
	title = "traveler.13.name"
	desc = "traveler.13.desc"
	picture = "GFX_evt_metropolis"
	location = event_target:traveler_fleet
	
	is_triggered_only = yes
	
	trigger = {
	
	}
	
	option = {
		name = traveler.13.a
	}
}

#Golden Age event control
event = {
	id = dest_traveler.14
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		# any_playable_country = {
			# has_modifier = dest_golden_age
			# NOT = {
				# has_ethic = ethic_gestalt_consciousness
			# }
		# }
	}

	immediate = {
		every_playable_country = {
			limit = {
				has_modifier = dest_golden_age
				NOT = {
					has_ethic = ethic_gestalt_consciousness
				}
			}
			log = "tested"
			random_list = {
				0.5 = {
					country_event = { id = dest_traveler.400 } #warmind
				}
				0.5 = {
					country_event = { id = dest_traveler.408 } #medical breakthroughs
				}
				99 = {
				
				}
			}
		}
	}
}

#recurring Golden Age
country_event = {
	id = dest_traveler.15
	title = "traveler.15.name"
	desc = "traveler.15.desc"
	picture = "GFX_evt_metropolis"
	
	is_triggered_only = yes
	#fire_only_once = yes
	
	trigger = {
		has_country_flag = had_golden_age
	}
	
	immediate = {
	}
	 
	option = {
		name = traveler.15.a
		trigger = {
			NOT = {
				OR = {
					has_ethic = ethic_spiritualist
					has_ethic = ethic_fanatic_spiritualist
				}
			}
		}
		add_modifier = {
			modifier = "dest_golden_age"
			days = @golden_age_length
		}
	}
	
	option = {
		name = traveler.15.b
		trigger = {
			OR = {
				has_ethic = ethic_spiritualist
				has_ethic = ethic_fanatic_spiritualist
			}
		}
		add_modifier = {
			modifier = "dest_golden_age"
			days = @golden_age_length
		}
	}
}

# collapse
# country_event = {
	# id = dest_traveler.301
	# title = "traveler.301.name"
	# desc = "traveler.301.desc"
	
	# is_triggered_only = yes
	
	# immediate = {
		# add_modifier = {
			# modifier = dest_collapse
			# days = -1
		# }
	# }
	
	# option = {
		# name = traveler.301.a
		# random_list = {
			# 30 = { country_event = { id = dest_traveler.302 days = 180 random = 10 } }
			# 30 = { country_event = { id = dest_traveler.304 days = 180 random = 10 } }
		# }
	# }
	
	# option = {
		# name = traveler.301.b
		# add_energy = -3000
		# add_influence = -200
		# random_list = {
			# 10 = { country_event = { id = dest_traveler.302 days = 180 } }
			# 10 = { country_event = { id = dest_traveler.304 days = 180 } }
		# }
	# }
# }

# collapse: riots
# country_event = {
	# id = dest_traveler.302
	# title = "traveler.302.name"
	# desc = "traveler.302.desc"
	
	# is_triggered_only = yes
	
	# immediate = {
		# add_modifier = {
			# modifier = dest_collapse_riots
			# days = -1
		# }
	# }
	
	# option = {
		# name = traveler.302.a
	# }
	
	# option = {
		# name = traveler.302.b
	# }
# }

# collapse: riots ended
# country_event = {
	# id = dest_traveler.303
	# title = "traveler.303.name"
	# desc = "traveler.303.desc"
	
	# is_triggered_only = yes
	
	# immediate = {
		# remove_modifier = dest_collapse_riots
	# }
	
	# option = {
		# name = traveler.303.a
	# }
# }

#############
#Golden Age
#############
#warmind
country_event = {
	id = dest_traveler.400
	title = "traveler.400.name"
	desc = "traveler.400.desc"
	picture = GFX_evt_sapient_AI
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { 
			has_country_flag = warmind_started
			has_technology = dest_tech_warmind
		}
	}
	
	immediate = {
		set_country_flag = warmind_started
	}
	
	option = {
		name = traveler.400.a
		trigger = {
			custom_tooltip_fail = {
				text = traveler.400.a.notenoughminerals
				resource_stockpile_compare = {
					resource = minerals
					value > 4999
				}
			}
			custom_tooltip_fail = {
				text = traveler.400.a.notenoughenergy
				resource_stockpile_compare = {
					resource = energy
					value > 4999
				}
			}
		}
		add_resource = {
			energy = -5000
			minerals = -5000
		}
		capital_scope = {
			enable_special_project = {
				name = DEST_TRAV_WARMIND
				owner = this
				location = this
			}
		}
	}
	
	option = {
		name = traveler.400.b
	}
}

country_event = {
	id = dest_traveler.401
	title = "traveler.401.name"
	desc = "traveler.401.desc"
	picture = GFX_evt_sapient_AI
	
	is_triggered_only = yes
	
	immediate = {
		give_technology = {
			tech = dest_tech_warmind
			message = no
		}
	}
	
	option = {
		name = traveler.401.a
	}
}

#Warmind - Alpha Build
planet_event = {
	id = dest_traveler.402
	title = "traveler.402.name"
	desc = "traveler.402.desc"
	picture = GFX_evt_sapient_AI
	
	is_triggered_only = no
	
	trigger = {
		has_building = dest_building_warmind_facility
		NOT = {
			owner = {
				has_country_flag = warmind_alpha
			}
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = warmind_alpha
			# country_event = {
				# id = dest_traveler.404
				# days = 720
			# }
		}
	}
	
	option = {
		name = traveler.402.a #immediate investment
		trigger = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value > 4999
				}
			}
		}
		owner = {
			add_resource = {
				energy = -5000
			}
		}
		hidden_effect = {
			owner = {
				country_event = {
					id = dest_traveler.403
					days = 100
				}
			}
		}
	}
	
	option = {
		name = traveler.402.b #prolonged investment
		owner = {
			add_modifier = {
				modifier = dest_warmind_investment
				days = 720
			}
		}
		hidden_effect = {
			owner = {
				country_event = {
					id = dest_traveler.403
					days = 720
				}
			}
		}
	}
}

#warmind - field tests
country_event = {
	id = dest_traveler.403
	title = "traveler.403.name"
	desc = "traveler.403.desc"
	picture = GFX_evt_sapient_AI
	
	is_triggered_only = yes
	
	immediate = {
		country_event = {
			id = dest_traveler.404
			days = 540
			random = 180
		}
	}
	
	option = {
		name = traveler.403.a
		add_modifier = {
			modifier = dest_warmind_test_mil
			days = 360
		}
	}
	
	option = {
		name = traveler.403.b
		add_modifier = {
			modifier = dest_warmind_test_sci
			days = 360
		}
	}
}

#warmind - upgrades
country_event = {
	id = dest_traveler.404
	title = "traveler.404.name"
	desc = "traveler.404.desc"
	picture = GFX_evt_sapient_AI
	
	is_triggered_only = yes
	
	immediate = {
		country_event = {
			id = dest_traveler.405
			days = 540
			random = 180
		}
	}
	
	option = {
		name = traveler.404.a
		add_research_option = dest_tech_warmind_prime
	}
}

#Warmind - Rollout
country_event = {
	id = dest_traveler.405
	title = "traveler.405.name"
	desc = "traveler.405.desc"
	picture = GFX_evt_sapient_AI
	
	is_triggered_only = yes
	
	immediate = {
	}
	
	option = {
		name = traveler.405.a
		add_research_option = dest_tech_warmind_copy
	}
}

planet_event = {
	id = dest_traveler.406
	title = "traveler.406.name"
	desc = "traveler.406.desc"
	picture = GFX_evt_sapient_AI
	
	is_triggered_only = yes
	
	trigger = {
		has_building = dest_building_warmind_prime
		NOT = { owner = { has_country_flag = warmind_online } }
	}
	
	immediate = {
		owner = { set_country_flag = warmind_online }
	}
	
	option = {
		name = traveler.406.a
	}
}

#on_leader: give golden age med trait
country_event = {
	id = dest_traveler.407
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_modifier = "dest_golden_age"
		has_authority = auth_machine_intelligence
	}
	
	immediate = {
		FROM = {
			add_trait = dest_leader_trait_golden_age
		}
	}
}

country_event = {
	id = dest_traveler.408
	title = "traveler.408.name"
	desc = "traveler.408.desc"
	picture = GFX_evt_microscopic_life
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = golden_age_medicine
		}
	}
	
	immediate = {
		set_country_flag = golden_age_medicine
		every_owned_leader = {
			add_trait = dest_leader_trait_golden_age
		}
	}
	
	option = {
		name = traveler.408.a
	}
}

##############
#Other Events
##############
#terraforming project
planet_event = { 
	id = dest_traveler.500
	title = "traveler.500.name"
	desc = "traveler.500.desc"
	picture = GFX_evt_satellite_in_orbit #change
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { solar_system = { space_owner = { has_country_flag = trav_terra_proj } } }
	}
	
	immediate = {
		solar_system = { space_owner = { set_country_flag = trav_terra_proj } }
	}
	
	option = {
		name = traveler.500.a
		save_event_target_as = trav_prog_target
		enable_special_project = {
			name = DEST_TRAV_TERRAFORMING_PROJECT
			owner = event_target:trav_prog_target
			location = THIS
		}
	}
}

country_event = {
	id = dest_traveler.501
	title = "traveler.501.name"
	desc = "traveler.501.desc"
	picture = GFX_evt_satellite_in_orbit
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {}
	
	option = {
		name = traveler.501.a
		#owner = {
			give_technology = { 
				tech = tech_terrestrial_sculpting
				message = no
			}
		#}
		trigger = {
			#owner = {
				NOT = { has_technology = tech_terrestrial_sculpting }
			#}
		}
	}
	
	option = {
		name = traveler.501.b
		#owner = {
			give_technology = { 
				tech = tech_ecological_adaptation
				message = no
			}
		#}
		trigger = {
			has_technology = tech_terrestrial_sculpting
			NOT = { has_technology = tech_ecological_adaptation }
		}
	}
	
	option = {
		name = traveler.501.c
		#owner = {
			give_technology = { 
				tech =  tech_climate_restoration
				message = no
			}
		#}
		trigger = {
			owner = {
				has_technology = tech_terrestrial_sculpting
				NOT = { has_technology = tech_climate_restoration }
			}
		}
	}
	
	#option = {
	#	name = traveler.501.d
	#	give_technology = {
	#		tech = tech_gaia_creation
	#		message = no
	#	}
	#	trigger = {
	#		has_technology = tech_climate_restoration
	#		NOT = { has_technology = tech_gaia_creation }
	#	}
	#}
	
	option = {
		name = traveler.501.e
		#owner = {
			add_resource = {
				physics_research = 1500
				society_research = 1500
				engineering_research = 1500
			}
		#}
		trigger = {
			has_ascension_perk = ap_world_shaper
		}
	}
}

#Traveler destroyed
country_event = {
	id = dest_traveler.502
	title = "traveler.502.name"
	desc = "traveler.502.desc"
	picture = GFX_evt_small_space_battle #Change this
	
	is_triggered_only = yes
	
	trigger = {
		FROMFROMFROM = {
			has_fleet_flag = dest_traveler_ship
		}
	}
	
	immediate = {
		set_global_flag = traveler_destroyed
		remove_global_flag = dest_traveler_exists
	}
	
	option = {
		name = traveler.502.a
		# country_event = { #uncomment when traveler armor is finished
			# id = dest_traveler.503
			# days = 30
		# }
		every_country = {
			limit = {
				is_ai = no
				NOT = {
					is_same_value = PREV
				} 
			}
			country_event = {
				id = dest_traveler.504
			}
		}
	}
}

country_event = {
	id = dest_traveler.503
	title = "traveler.503.name"
	desc = "traveler.503.desc"
	picture = GFX_evt_unknown_ships
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = traveler.503.a
		give_technology = {
			tech = dest_tech_traveler_material
			message = no
		}
	}
}

country_event = {
	id = dest_traveler.504
	title = "traveler.504.name"
	desc = "traveler.504.desc"
	picture = GFX_evt_small_space_battle
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {}
	
	option = {
		name = traveler.504.a
	}
}